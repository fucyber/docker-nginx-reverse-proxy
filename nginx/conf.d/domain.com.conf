
upstream front-server-upstream {
    server 192.168.1.10:80;
}


server {
      listen 443;
      
      server_name example-domain.com  www.example-domain.com; 
      server_tokens off;
     
      access_log /var/log/nginx/file.server.com.access.log;
      error_log /var/log/nginx/file.server.com.error.log;


#     # SSL
      ssl_certificate /var/ssl/example-domain.com/yourdomain_ssl_cert.crt;  #Or xxx.pem
      ssl_certificate_key /var/ssl/example-domain.com/private.key;


     # reqharbor-uired to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
     chunked_transfer_encoding on;

     location / {

        client_body_temp_path      /tmp/;
        client_body_in_file_only    on;
        client_body_buffer_size    5M;
        client_max_body_size       600M;


         proxy_pass http://front-server-upstream/;
         proxy_set_header Host $http_host;
         proxy_set_header X-Real-IP $remote_addr;
         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
         # When setting up Harbor behind other proxy, such as an Nginx instance, remove the below line if the proxy already has similar settings.
         proxy_set_header X-Forwarded-Proto $scheme;

         # Add Secure flag when serving HTTPS
         proxy_cookie_path / "/; secure";

         proxy_buffering off;
         proxy_request_buffering off;
     }
}



server {
    listen 80;
    server_name example-domain.com  www.example-domain.com; 
  
    #--Enable redirect to https
    return 308 https://$host$request_uri;
}
